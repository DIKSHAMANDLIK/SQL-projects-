Create database ONLINE_BOOKSTORE;
USE ONLINE_BOOKSTORE;	
CREATE TABLE BOOKS (BOOK_ID INT PRIMARY KEY , TITLE VARCHAR (75), AUTHOR VARCHAR(75), PUBLICATION_YEAR INT, PRICE DEC (7,2), AVAILABLE_QUANTITY INT );
INSERT INTO BOOKS VALUES (1, "The History of Tom Jones a Foundling ", "Henry Fielding", 2022, 500.00, 100);
INSERT INTO BOOKS VALUES  (2, "Pride and Prejudice", "Jane Austen", 2015, 250.00, 75);
INSERT INTO BOOKS VALUES  
   (3, "The Red and the Black", "Stendhal", 2003, 150.99, 120),
    (4, "David Copperfield", " Charles Dickens" , 2022, 550.99, 90),
    (5, "Le Père Goriot", "Honoré de Balzac", 2001, 150.99, 80),
    (6, "Madame Bovary", "Gustave Flaubert", 2022, 440.99, 110),
    (7, "The Da Vinci Code", "Dan Brown", 2003, 410.75, 95),
    (8, "Harry Potter","J.K. Rowling", 2016, 155.50, 150),
    (9, "War and Peace", "Tolstoy", 2022, 450.25, 105),
    (10, "Brave New World", "Aldous Huxley", 2001, 275.75, 70);
SELECT * from BOOKS;
    
Create table CUSTOMERSINFO ( customer_id INT PRIMARY KEY, first_name VARCHAR (10) , last_name VARCHAR (10), email VARCHAR(100), registration_date DATE);
INSERT INTO CUSTOMERSINFO VALUES (1, 'John', 'Doe', 'john.doe@example.com', '2022-01-15');
INSERT INTO CUSTOMERSINFO VALUES 
    (2, 'Jane', 'Smith', 'jane.smith@example.com', '2022-02-20'),
    (3, 'Robert', 'Johnson', 'robert.johnson@example.com', '2022-03-10'),
    (4, 'Emily', 'Williams', 'emily.williams@example.com', '2022-04-05'),
    (5, 'David', 'Jones', 'david.jones@example.com', '2022-05-12'),
    (6, 'Emma', 'Miller', 'emma.miller@example.com', '2022-06-18'),
    (7, 'Michael', 'Davis', 'michael.davis@example.com', '2022-07-25'),
    (8, 'Olivia', 'Wilson', 'olivia.wilson@example.com', '2022-08-30'),
    (9, 'William', 'Moore', 'william.moore@example.com', '2022-09-14'),
    (10, 'Sophia', 'Taylor', 'sophia.taylor@example.com', '2022-10-22');
SELECT * FROM CUSTOMERSINFO;

CREATE TABLE ORDERS (order_id INT PRIMARY KEY, customer_id INT, order_date DATE , total_amount DEC(10,2), foreign key (customer_id) references CUSTOMERSINFO (customer_id));
INSERT INTO ORDERS VALUES
    (1, 3, '2022-02-01', 550.99),
    (2, 5, '2022-03-15', 250.75),
    (3, 2, '2022-04-10', 230.50),
    (4, 7, '2022-05-05', 420.25),
    (5, 1, '2022-06-20', 175.99),
    (6, 9, '2022-07-30', 650.50),
    (7, 6, '2022-08-12', 295.75),
    (8, 10, '2022-09-18', 480.25),
    (9, 4, '2022-10-25', 110.75),
    (10, 8, '2022-11-05', 780.50);
SELECT * FROM ORDERS;

create table ORDER_DETAILS ( order_id INT , book_id INT, quantity INT, subtotal DEC (10,2), FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (order_id),
    FOREIGN KEY (book_id) REFERENCES BOOKS (BOOK_ID));

   INSERT INTO  ORDER_DETAILS VALUES (1, 2, 2, 255.00),
    (1, 4, 1, 700.99),
    (2, 8, 3, 465.50),
    (3, 1, 1, 999.99),
    (4, 6, 2, 295.98),
    (5, 3, 3, 265.97),
    (6, 10, 1, 900.75),
    (7, 7, 2, 235.50),
    (8, 9, 4, 730.00),
    (9, 5, 1, 100.99);
SELECT * FROM ORDER_DETAILS;

 select * from BOOKS;
 
 #### Retrieve a list of books (book title and author) published in the year 2022.
        SELECT TITLE, AUTHOR FROM BOOKS WHERE PUBLICATION_YEAR=2022;
        
        #### Calculate the total revenue generated by the bookstore in the year 2022.
        
        select * from orders;
        SELECT SUM(total_amount) from ORDERS where year(order_date)=2022;
        
     ####Find the top 5 bestselling books (based on the total quantity sold) in descending order.

       SELECT * FROM ORDER_DETAILS;
SELECT b.title, b.author, SUM(od.quantity) AS total_quantity_sold FROM Books b JOIN Order_Details od ON b.book_id = od.book_id
GROUP BY b.book_id ORDER BY total_quantity_sold DESC LIMIT 5;   
 
### Determine the customer who made the highest total purchase amount and the total amount they spent:

SELECT c.customer_id, c.first_name, c.last_name, SUM(o.total_amount) AS total_spent FROM CUSTOMERSINFO c JOIN ORDERS o ON c.customer_id = o.customer_id
GROUP BY c.customer_id ORDER BY total_spent DESC LIMIT 1; 
###  Calculate the average price of books published before the year 2010:
SELECT AVG(price) AS average_price FROM Books WHERE publication_year < 2010;

###Identify the customer(s) who registered in 2023:
SELECT * FROM CUSTOMERSINFO WHERE YEAR(registration_date) = 2023;

###Calculate the total number of orders placed in the database:
SELECT COUNT(*) AS total_orders FROM ORDERS;

###Find the book(s) with the lowest available quantity in stock:
SELECT * FROM BOOKS ORDER BY available_quantity LIMIT 1;

    ##Calculate the total revenue for each year from 2020 to 2022:
    
SELECT YEAR(order_date) AS order_year, SUM(total_amount) AS total_revenue FROM ORDERS
WHERE YEAR(order_date) BETWEEN 2020 AND 2022 GROUP BY order_year;

### Determine the customer(s) with the most orders placed:

SELECT c.customer_id, c.first_name, c.last_name, COUNT(o.order_id) AS total_orders FROM CUSTOMERSINFO c JOIN ORDERS o ON
 c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY total_orders DESC LIMIT 1;